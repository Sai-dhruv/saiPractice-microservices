<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
<fullyQualifiedTypeName name="lombok.Data"/>
<fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
<fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.cdi.JpaRepositoryExtension"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.ComponentScan"/>
<fullyQualifiedTypeName name="org.springframework.boot.autoconfigure.EnableAutoConfiguration"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.config.EnableJpaRepositories"/>
<fullyQualifiedTypeName name="com.saipractice.departmentservice.repository.DepartmentRepository"/>
<fullyQualifiedTypeName name="com.saipractice.departmentservice.service.DepartmentService"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestParam"/>
<fullyQualifiedTypeName name="sun.util.logging.resources.logging"/>
<fullyQualifiedTypeName name="lombok.extern.java.Log"/>
<fullyQualifiedTypeName name="org.slf4j.Logger"/>
<fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
<fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
<fullyQualifiedTypeName name="com.sun.org.apache.regexp.internal.recompile"/>
<fullyQualifiedTypeName name="java.util.Optional"/>
<fullyQualifiedTypeName name="lombok.Getter"/>
<fullyQualifiedTypeName name="lombok.Setter"/>
<fullyQualifiedTypeName name="lombok.ToString"/>
<fullyQualifiedTypeName name="lombok.Value"/>
<fullyQualifiedTypeName name="com.saipractice.departmentservice.entity.Department"/>
<fullyQualifiedTypeName name="javax.persistence.Entity"/>
<fullyQualifiedTypeName name="javax.persistence.GeneratedValue"/>
<fullyQualifiedTypeName name="javax.persistence.GenerationType"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Repository"/>
<fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
<fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
<fullyQualifiedTypeName name="com.saipractice.usersservice.repository.UserRepository"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
<fullyQualifiedTypeName name="com.saipractice.usersservice.service.UserService"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PathVariable"/>
<fullyQualifiedTypeName name="javax.persistence.Id"/>
<fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
<fullyQualifiedTypeName name="org.springframework.web.client.RestTemplate"/>
<fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
<fullyQualifiedTypeName name="com.saipractice.usersservice.entity.User"/>
<fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
<fullyQualifiedTypeName name="com.saipractice.usersservice.entity.Department"/>
<fullyQualifiedTypeName name="com.saipractice.usersservice.entity.ResponseTemplate"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.server.EnableEurekaServer"/>
<fullyQualifiedTypeName name="org.springframework.cloud.loadbalancer.annotation.LoadBalancerClient"/>
<fullyQualifiedTypeName name="org.springframework.cloud.client.loadbalancer.LoadBalanced"/>
<fullyQualifiedTypeName name="org.springframework.cloud.netflix.eureka.EnableEurekaClient"/>
</qualifiedTypeNameHistroy>
